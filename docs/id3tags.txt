Generally speaking, there are two kinds of tags for mp3 files: id3v1 and id3v2.

* id3v1

** Very limited set of tags

** Each tag has a limited range

*** Comments are 30 bytes
*** Genre is 1 byte, categories are predefined

* id3v2

** very large set of tags
*** the set is still constrained
By spec, and by available tools

** Range of values of tags is effectively unlimited

** There are some user-defined tags that could perhaps be used to create tags that are otherwise unavailable

** Available tools do not handle all tags consistently

*** Difference in handling T??? (Genre) tag between Tag.exe and id3v2.exe
<put example here>

* mp3 tags (id3v1, id3v2)

Looks like I will use MP3::Tag and friends. This supports v1 and v2 tags.

** Internal

V1 tags will have standard v1 names. V2 tags will have standard v2
names. This allows for the (perverse) possiblity of having different
values for the shared tags. Different values for GENRE and TCON are,
of course, licit.

** Tag reading

*** v1 and v2 handling

If the config 'meld_tags' is not set, make tag record strictly from
what is found in file.

If it is set, then, if a v1 tag is found but not a v2, create v2 from
v1, and vice versa. If both tags are found, set each from file.

*** Ignore v2 tags that we can't handle.

** Tag writing

*** v1 and v2 handling

As in "Tag reading", above.


# ** Files may (shall?) have both
# *** Unless only v1 writer is available

# ** Source files may have either, both, or none

# If changed (by update), both types will be written

# It looks like the tag writers that write both kinds will automatically
# write id3v2 tags for the id3v1 tags (for instance, setting year=2001
# will also set TYER=2001.



** Tag writers
*** No need for v1 or v2 only
*** V1 or V2-only writer may be the only one present
*** Converter may need to decide if it can write tags, or if it needs to invoke a tag writer
This is an optimization.
I can choose not to support v1 only...


* ogg/vorbis

** unlimited range of tags

** unlimited values of tags

* flac (metaflac)

** unlimited range of tags

** unlimited values of tags

* exif (jpeg, etc)

** Most similar to id3v2

* abc

** Hack

** set and range of tags is unlimited, but should be small

* midi

** Hack

** set and range of tags is unlimited, but should be small

* General

** How to map tag names across tag types?

*** For now, allow all names, but only those that match id3v2 tags will be written to mp3 files.
Plus a few different names for the common set (year, track, artist, etc) (=id3v1)

** There may be tags that idv does not want to deal with (yet).
The picture tags in id3v2 are an example. This implies that idv should
not erase all id3v2 tags (or vorbis or flac, or ...) This will become
more interesting if idv ever starts resampling mp3 files, since it
will have to figure out how to bring the tags over (maybe the
conversion tool will do this automatically?).


* Tag support conclusions

** Generally speaking, idval will give priority to id3v2 tags on
   reading. Only if there is no id3v2 tag will idval try to determine
   its value based on an id3v1 tag (if present).

*** There will be an option to exactly read all v1 and v2 tags from an
    mp3 file (v1 tag names will still be (possibly) translated).

** On writing, idval will always write id3v1 tags from information in
   id3v2 tags. That is, idval will write its (idval's) information to
   the file in id3v2 tags, and will also write id3v1 tags as
   appropriate and if desired.

** idv3v2 encoding support
   
   Some id3v2 tags have encoding information attached to the tag.

*** Following the id3v2 spec, text will be encoded either as iso-8859-1 or Unicode.

**** Whenever a new data collection is created, the default encoding
     will be set according to the current value of ${^UNICODE}. If the
     data collection is read from an existing file, the default
     encoding will be set to be the same as that of the data file.

**** Currently, the whole file will be either one or the other.

It shouldn't be too hard to do an escape-type thing as needed. This
rule lets us avoid the '0%%' in front of every T*** field.

** For mp3 files, both types will always be written

** Tags supported by id3v1 will be translated (year, date => -year, etc.)

** Tags with the same names as id3v2 tags (T...) will be put into mp3 files.

** Standard Vorbis/Flac tag names that have corresponding id3v2 names will be translated.
Phase 2?

** Tags with other names will be inserted into TXXX tags for mp3 files (phase 2)

** idv must know about standard genre list.
GENRE tag should be id3v1 compliant.
TCON tag should be used for id3v2 compliance.

This should be builtin as an option for validation. Genre values that
are not v1 compliant must be handled specially (v1 option => 255,
actual genre in v2. Actual genre should always be taken from v2 genre
tag. Genre tag values should always be represented in data files as
names (not numbers).

If no converters barf on bogus genre names, this rule can be
relaxed. Need to check lame. Yes: use "--add-id3v2" and
"--ignore-tag-errors". With "--ignore-tag-errors", lame will set
unrecognized genre to "other".

** idv should not automatically add TCON tag from GENRE tag
There is no sane way to do this without either 1) allowing
inconsistency, if user changes on or the other tag later, or 2)
overwriting user-changed data.

This kind of massaging should be handled by a script.
